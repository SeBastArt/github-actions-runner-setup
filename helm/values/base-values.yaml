# Base configuration for GitHub Actions Runner Controller
# Optimized for ARM64 Kubernetes clusters

# GitHub configuration for Personal Access Token
# This will be set via --set-string in the workflow
githubConfigUrl: ""

# For PAT authentication (not GitHub App)
# The token will be provided via secret
githubConfigSecret:
  github_token: ""

# Runner configuration
runnerScaleSetName: "arm64-runners"

# Labels for runner identification
runnerLabels:
  - "self-hosted"
  - "linux" 
  - "ARM64"
  - "arm64-runners"

# Template for the runner pods
template:
  spec:
    # ARM64 node selector
    nodeSelector:
      kubernetes.io/arch: arm64
    
    # Init container to install Docker CLI and tools
    initContainers:
    - name: install-container-tools
      image: ubuntu:22.04
      command: ["/bin/bash"]
      args:
        - -c
        - |
          echo "ðŸ”§ Installing container build tools for ARM64..."
          apt-get update
          apt-get install -y curl apt-transport-https ca-certificates gnupg lsb-release
          
          # Install Docker CLI (client only - daemon runs in sidecar)
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce-cli docker-buildx-plugin
          
          # Install kubectl and helm for ARM64
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
          chmod +x kubectl
          mv kubectl /shared-tools/
          
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          HELM_INSTALL_DIR=/shared-tools ./get_helm.sh --no-sudo
          
          # Copy Docker CLI to shared tools
          cp /usr/bin/docker /shared-tools/
          cp -r /usr/libexec/docker /shared-tools/ || true
          
          echo "âœ… Container tools installed successfully"
      
      volumeMounts:
        - name: shared-tools
          mountPath: /shared-tools
      
      securityContext:
        runAsUser: 0  # Root for package installation
    
    # Resource requests and limits
    containers:
    - name: runner
      image: ghcr.io/actions/actions-runner:latest
      resources:
        requests:
          cpu: "100m"
          memory: "256Mi"
        limits:
          cpu: "2000m"
          memory: "4Gi"
      
      # Environment variables for ARM64 optimization with Docker-in-Docker
      env:
      - name: RUNNER_TOOL_CACHE
        value: /opt/hostedtoolcache
      - name: DOCKER_HOST
        value: tcp://localhost:2376
      - name: DOCKER_TLS_VERIFY
        value: "1"
      - name: DOCKER_CERT_PATH
        value: /certs/client
      - name: PATH
        value: "/shared-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      
      # Volume mounts
      volumeMounts:
      - name: docker-certs
        mountPath: /certs
      - name: tool-cache
        mountPath: /opt/hostedtoolcache
      - name: shared-tools
        mountPath: /shared-tools
    
    # Docker-in-Docker sidecar container for ARM64
    - name: docker-dind
      image: docker:24-dind
      env:
      - name: DOCKER_TLS_CERTDIR
        value: "/certs"
      - name: DOCKER_DRIVER
        value: "overlay2"
      
      resources:
        requests:
          cpu: "100m" 
          memory: "128Mi"
        limits:
          cpu: "1000m"
          memory: "2Gi"
      
      securityContext:
        privileged: true
        runAsUser: 0
      
      volumeMounts:
      - name: docker-certs
        mountPath: /certs
      - name: docker-storage
        mountPath: /var/lib/docker
    
    # Volumes
    volumes:
    - name: docker-certs
      emptyDir: {}
    - name: docker-storage
      emptyDir: {}
    - name: tool-cache
      emptyDir: {}
    - name: shared-tools
      emptyDir: {}
    
    # Tolerations for ARM64 nodes (if needed)
    tolerations: []
    
    # Pod security context
    securityContext:
      runAsUser: 1001
      runAsGroup: 121
      fsGroup: 121

# Autoscaling configuration
minRunners: 0
maxRunners: 5

# Scaling behavior
scaleDownDelaySecondsAfterScaleOut: 300
scaleDownFactor: 0.5
scaleUpTrigger:
  githubEvent:
    - check_run
    - pull_request
  duration: "1m"

# Pod cleanup
podCleanupTimeout: 600

# Logging
log:
  level: info
  format: text

# Metrics (optional)
metrics:
  enabled: true
  port: 8080
  path: /metrics
